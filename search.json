[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MyBlog2024",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 1, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nSeven months commuting to the office\n\n\n\n\n\n\nData Analysis\n\n\n\n\n\n\n\n\n\nFeb 1, 2024\n\n\nRiyan Aditya\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nJan 29, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/trip-tracker/Seven months commuting to the office.html",
    "href": "posts/trip-tracker/Seven months commuting to the office.html",
    "title": "Seven months commuting to the office",
    "section": "",
    "text": "Objective of this notebook: * Plot data taken from AppFibr App * Analyse are there optimum time to leave home or office * Analyse if there are differences of travel time in different days * Analyse if there are differences of travel to the office vs from the office * Analyse if there are significant differences between two rideshare providers * Analyse if there are optimum time to leave home or office"
  },
  {
    "objectID": "posts/trip-tracker/Seven months commuting to the office.html#duration-and-fare-comparison-based-on-travel-origination",
    "href": "posts/trip-tracker/Seven months commuting to the office.html#duration-and-fare-comparison-based-on-travel-origination",
    "title": "Seven months commuting to the office",
    "section": "Duration and Fare comparison based on travel origination",
    "text": "Duration and Fare comparison based on travel origination\nOnce filtering for travels outside peak hours, we are left with 85 trips with some interesting observations: * I took significantly more trips with Provider1 than Provider2. No, I did not realised that. * The data matched my expectation, where I suspected that trips from home were faster and generally more expensive. * On average Provider1 was cheaper than Provider2, including the minimum fare ever offered to me.This could be an interesting finding on their pricing model, but take this with a grain of salt due to the small sample size especially for trips conducted via Provider2. * Even though fare differences between the 2 providers were somewhat expected, but I did not expect that the average travel time frome Home by Provider1 (42 mins) is significantly lower than Provider2 (48 mins). Route differences may play a factor here.\n\nDuration (in minutes)\n\n# Describe Duration (in minutes)\ndf.groupby([\"From\", \"Provider\"])['Duration'].describe().loc[:,['count','mean','min','max']].round().astype(int)\n\n\n\n\n\n\n\n\n\ncount\nmean\nmin\nmax\n\n\nFrom\nProvider\n\n\n\n\n\n\n\n\nHome\nProvider1\n27\n42\n29\n67\n\n\nProvider2\n18\n48\n31\n69\n\n\nOffice\nProvider1\n22\n54\n33\n73\n\n\nProvider2\n18\n53\n29\n83\n\n\n\n\n\n\n\n\n# Boxplot for travel duration data distribution\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Creating plot\nbp = df.boxplot(\"Duration\", by=[\"From\", \"Provider\"], ax=ax)\nplt.suptitle('')\n\n# Setting title to graph\nax.set_title('Boxplot of trip duration based on Provider and Trip Origination')\n\n# Label x-axis and y-axis\nax.set_ylabel('Duration (mins)')\nax.set_xlabel('')\n\n# Remove grid\nax.grid(False)\n\n# Add median value text annotation\nfor i, box in enumerate(ax.get_xticks()):\n    # Calculate median value for each box\n    median_val = df.groupby([\"From\", \"Provider\"]).median().iloc[i][\"Duration\"].astype(int)\n    \n    # Add text annotation at the median position\n    ax.text(box, median_val, f'Median: \\n {median_val} mins', verticalalignment='bottom', horizontalalignment='center', color='black')\n\n# Show plot\nplt.show()\n\n\n\n\n\n\n\n\n\n\nFare (in IDR)\n\n# Describe Fare (in IDR)\ndf.groupby([\"From\", \"Provider\"])['Fare'].describe().loc[:,['count','mean','min','max']].round(0).astype(int)\n\n\n\n\n\n\n\n\n\ncount\nmean\nmin\nmax\n\n\nFrom\nProvider\n\n\n\n\n\n\n\n\nHome\nProvider1\n27\n53630\n40500\n71000\n\n\nProvider2\n18\n57472\n48000\n75000\n\n\nOffice\nProvider1\n22\n47227\n38000\n69500\n\n\nProvider2\n18\n48667\n44500\n63500\n\n\n\n\n\n\n\n\n# Boxplot for travel duration data distribution\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Creating plot\nbp = df.boxplot(\"Fare\", by=[\"From\", \"Provider\"], ax=ax)\nplt.suptitle('')\n\n# Setting title to graph\nax.set_title('Boxplot of trip fare based on Provider and Trip Origination')\n\n# Label x-axis and y-axis\nax.set_ylabel('Fare (IDR)')\nax.set_xlabel('')\n\n# Remove grid\nax.grid(False)\n\n# Add median value text annotation\nfor i, box in enumerate(ax.get_xticks()):\n    # Calculate median value for each box\n    median_val = df.groupby([\"From\", \"Provider\"]).median().iloc[i][\"Fare\"].astype(int)\n    \n    # Add text annotation at the median position\n    ax.text(box, median_val, f'Median: \\n {median_val} IDR', verticalalignment='bottom', horizontalalignment='center', color='black')\n\n# Show plot\nplt.show()\n\n\n\n\n\n\n\n\nOverall this high level summary suggests that we should deep dive the data even more to answer some of these questions that I would like to explore: * Are there travel time variability for different days? I somewhat believe that traffic is generally worse on Monday mornings. * Are there correlation between fare and travel duration? I find it weird that for similar travel distance, the travel fare from the office is significantly cheaper than from home, especially given that it was common knowledge that the evening traffic around TB Simatupang Road is extremly bad. Even Google Map presents the traffic in dark red! * Are there statistically different travel fare and duration between trips provided by Provider1 and Provider2? If any, which providers maybe cheaper. * Are there optimum time to leave home or office based on the data collected?"
  },
  {
    "objectID": "posts/trip-tracker/Seven months commuting to the office.html#travel-time-for-different-days",
    "href": "posts/trip-tracker/Seven months commuting to the office.html#travel-time-for-different-days",
    "title": "Seven months commuting to the office",
    "section": "Travel time for different days",
    "text": "Travel time for different days\n\n# Describe Duration (in minutes)\ndf.groupby([\"From\", \"day_of_week\"])['Duration'].describe().loc[:,['count','mean','min','max']].round().astype(int)\n\n\n\n\n\n\n\n\n\ncount\nmean\nmin\nmax\n\n\nFrom\nday_of_week\n\n\n\n\n\n\n\n\nHome\nFriday\n4\n44\n38\n50\n\n\nMonday\n19\n45\n31\n67\n\n\nThursday\n7\n44\n36\n49\n\n\nTuesday\n7\n45\n29\n69\n\n\nWednesday\n8\n45\n37\n56\n\n\nOffice\nFriday\n5\n59\n54\n66\n\n\nMonday\n14\n47\n32\n59\n\n\nThursday\n7\n61\n51\n73\n\n\nTuesday\n5\n45\n30\n65\n\n\nWednesday\n9\n59\n29\n83\n\n\n\n\n\n\n\n\n# Define the order of days of the week\nday_order = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']\n\n# Convert 'day_of_week' column to categorical with specified order\ndf['day_of_week'] = pd.Categorical(df['day_of_week'], categories=day_order, ordered=True)\n\n# Boxplot for travel duration data distribution\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10, 10))\n\n# Creating top subplot\nbp1 = df[df['From']=='Home'].boxplot(\"Duration\", by=\"day_of_week\", ax=ax1)\nax1.set_title('From Home')\nax1.set_xlabel('')\nax1.set_ylabel('Duration (mins)')\nax1.grid(False)\n\n# Add median value text annotation\nfor i, box in enumerate(ax1.get_xticks()):\n    # Calculate median value for each box\n    median_val = df[df['From']=='Home'].groupby(\"day_of_week\").median().iloc[i][\"Duration\"].astype(int)\n    \n    # Add text annotation at the median position\n    ax1.text(box, median_val, f'Median: \\n {median_val} mins', verticalalignment='bottom', horizontalalignment='center', color='black')\n\n\n# Creating bottom subplot\nbp2 = df[df['From']=='Office'].boxplot(\"Duration\", by=\"day_of_week\", ax=ax2)\nax2.set_title('From Office')\nax2.set_xlabel('')\nax2.set_ylabel('Duration (mins)')\n\n# Add median value text annotation\nfor i, box in enumerate(ax2.get_xticks()):\n    # Calculate median value for each box\n    median_val = df[df['From']=='Office'].groupby(\"day_of_week\").median().iloc[i][\"Duration\"].astype(int)\n    \n    # Add text annotation at the median position\n    ax2.text(box, median_val, f'Median: \\n {median_val} mins', verticalalignment='bottom', horizontalalignment='center', color='black')\n\n\nplt.suptitle('')\n\n# Remove grid for the second subplot\nax2.grid(False)\n\n# Adjust layout for better spacing\nplt.tight_layout()\n\n# Show plot\nplt.show()\n\n\n\n\n\n\n\n\nIt turns out the data does not show that there are significant travel time on Monday compared to other days. Perhaps it was simply psychological bias since I went to the office more frequently on Mondays for weekly report session with the management team.\nHowever, even with limited data on travel days other than Monday, it is interesting to see that travel from the office is significantly longer on Wednesdays to Fridays. Travels during later part of the week are often over 10 minutes longer compared to travels during Mondays and Tuesdays. I certainly did not realise that."
  },
  {
    "objectID": "posts/trip-tracker/Seven months commuting to the office.html#correlation-between-fare-and-duration",
    "href": "posts/trip-tracker/Seven months commuting to the office.html#correlation-between-fare-and-duration",
    "title": "Seven months commuting to the office",
    "section": "Correlation between fare and duration",
    "text": "Correlation between fare and duration\nOne usually assumes that rideshares’ fare is correlated with travel duration (or distance). This is true even for traditional taxis where the meter primarily count the distance travelled. The meter even includes the time spent on travel even when its not moving, eg: in traffic.\nWe have already seen from the data earlier that the travel fares and durations could differ significantly even for the same travel distance. But, are there any correlation between travel fare and durations? I am especially curious for my travel originated from the office where it was well known that the traffic in TB Simatupang is exteremely bad in the evening. Furthermore it is not unreasonable to assume that the pricing model from the rideshare providers may account for potential delays during travel since similar model has been adopted by the taxis. Afterall they can get these potential delays data from Google Map route traffic, the same as how we as customers see potential time taken in Google Map.\n\n# Import stats module to calculate LBF\nimport scipy.stats\n\n\n# Scatter plot for Fare and Duration with color based on 'From'\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# calculate LBF & the R2\nm1, b1, r_value1, p_value1, std_err1 = scipy.stats.linregress(df[df['From'] == 'Home'] ['Fare'],\n                                                                  df[df['From'] == 'Home'] ['Duration'])\nm2, b2, r_value2, p_value2, std_err2 = scipy.stats.linregress(df[df['From'] == 'Office'] ['Fare'],\n                                                                  df[df['From'] == 'Office'] ['Duration'])\n\n# Plot 2 scatter plot & their LBF & display the R^2\nscatter1 = ax.scatter(df[df['From'] == 'Home'] ['Fare'], df[df['From'] == 'Home'] ['Duration'],c='red',label='Home')\nax.plot(df[df['From'] == 'Home'] ['Fare'], m1*df[df['From'] == 'Home'] ['Fare'] + b1,c='red')\nax.annotate('R^2: ' + str(\"{:.2f}\".format(r_value1**2)), xy=(70000,51),c='red')\n\nscatter2 = ax.scatter(df[df['From'] == 'Office'] ['Fare'], df[df['From'] == 'Office'] ['Duration'],c='blue',label='Office')\nax.plot(df[df['From'] == 'Office'] ['Fare'], m2*df[df['From'] == 'Office'] ['Fare'] + b2,c='blue')\nax.annotate('R^2: ' + str(\"{:.2f}\".format(r_value2**2)), xy=(70000,60),c='blue')\n\n# Setting title to graph\nax.set_title('Scatter Plot of Fare and Duration based on Travel origination')\nax.set_xlabel('Fare (IDR)')\nax.set_ylabel('Duration (mins)')\n\n# Add legend\nax.legend()\n\n# Show plot\nplt.show()\n\n\n\n\n\n\n\n\nLooks like there is no strong correlation between travel fare and travel duration, as indicated by the low \\(R^{2}\\)\nOne hypothesis could be that the demand for service is given higher weight in the rideshares’ pricing model. Logically my morning trip from Mega Kuningan in the CBD should have higher demand from other prospective riders. In contrast, my evening trip from TB Simatupang simply has less demand around this area."
  },
  {
    "objectID": "posts/trip-tracker/Seven months commuting to the office.html#hypothesis-testing",
    "href": "posts/trip-tracker/Seven months commuting to the office.html#hypothesis-testing",
    "title": "Seven months commuting to the office",
    "section": "Hypothesis testing",
    "text": "Hypothesis testing\nIn this section we will conduct hypothesis testing whether there are significant trip and fare differences between the two providers. If pvalue &lt; 0.05 then we can considered that the samples are statistically different.\n\n# import stats module\nfrom scipy.stats import ttest_ind\n\n\nOverall fare from home vs from office\n\n# ttest for fare of home vs office\n\n#define samples\ncat1 = df[df['From'] == 'Home'] ['Fare']\ncat2 = df[df['From'] == 'Office'] ['Fare']\n\n#perform Welch's t-test\nttest_ind(cat1, cat2)\n\nTtest_indResult(statistic=4.220692123629692, pvalue=6.191721153034327e-05)\n\n\nFare originated from home and office are statistically different\n\n\nFare from home for Provider1 vs Provider2\n\n# ttest for fare from home between provider 1 & 2\n\n#define samples\ncat1 = df[(df['From'] == 'Home') & (df['Provider'] == 'Provider1')] ['Fare']\ncat2 = df[(df['From'] == 'Home') & (df['Provider'] == 'Provider2')] ['Fare']\n\n#perform Welch's t-test\nttest_ind(cat1, cat2)\n\nTtest_indResult(statistic=-1.4881017656220044, pvalue=0.14402157661902457)\n\n\nThere is no significant difference between fare for trips originated from home for rides conducted via Provider1 and Provider2\n\n\nFare from office for Provider1 vs Provider2\n\n# ttest for fare from office between provider 1 & 2\n\n#define samples\ncat1 = df[(df['From'] == 'Office') & (df['Provider'] == 'Provider1')] ['Fare']\ncat2 = df[(df['From'] == 'Office') & (df['Provider'] == 'Provider2')] ['Fare']\n\n#perform Welch's t-test\nttest_ind(cat1, cat2)\n\nTtest_indResult(statistic=-0.6291093039880321, pvalue=0.5330415051263946)\n\n\nThere is no significant difference between fare for trips originated from office for rides conducted via Provider1 and Provider2\n\n\nOverall duration from home vs from office\n\n# ttest for duration of home vs office\n\n#define samples\ncat1 = df[df['From'] == 'Home'] ['Duration']\ncat2 = df[df['From'] == 'Office'] ['Duration']\n\n#perform Welch's t-test\nttest_ind(cat1, cat2)\n\nTtest_indResult(statistic=-3.985717654046981, pvalue=0.0001439696232272107)\n\n\nTrip duration originated from home and office are statistically different\n\n\nDuration from home for Provider1 vs Provider2\n\n# ttest for fare from home between provider 1 & 2\n\n#define samples\ncat1 = df[(df['From'] == 'Home') & (df['Provider'] == 'Provider1')] ['Duration']\ncat2 = df[(df['From'] == 'Home') & (df['Provider'] == 'Provider2')] ['Duration']\n\n#perform Welch's t-test\nttest_ind(cat1, cat2)\n\nTtest_indResult(statistic=-2.6960841168660505, pvalue=0.009974894309153371)\n\n\nTrip duration from home is statistically different between Provider1 and Provider2\n\n\nDuration from office for Provider1 vs Provider2\n\n# ttest for fare from office between provider 1 & 2\n\n#define samples\ncat1 = df[(df['From'] == 'Office') & (df['Provider'] == 'Provider1')] ['Duration']\ncat2 = df[(df['From'] == 'Office') & (df['Provider'] == 'Provider2')] ['Duration']\n\n#perform Welch's t-test\nttest_ind(cat1, cat2)\n\nTtest_indResult(statistic=0.19722782722858406, pvalue=0.8447004284799403)\n\n\nThere is no significant difference between trips duration originated from office if taken by Provider1 and Provider2"
  },
  {
    "objectID": "posts/trip-tracker/Seven months commuting to the office.html#optimum-time-to-leave-home-or-office",
    "href": "posts/trip-tracker/Seven months commuting to the office.html#optimum-time-to-leave-home-or-office",
    "title": "Seven months commuting to the office",
    "section": "Optimum time to leave home or office",
    "text": "Optimum time to leave home or office\nThis section shall explores my original goal of collecting these data. Are there optimum time to leave home or office to minimise the duration of being stuck in Jakarta’s traffic.\nFor simplicity, I will group by the travel start time in 5 minutes interval. Then we can see the average travel time for each of those 5 minutes group to see if an optimum time can be observed.\n\n# Extract only the time component\n\n# Group by every 5 minutes\ndf['hour'] = pd.to_datetime(df['From_time']).dt.hour\ndf['minute'] = pd.to_datetime(df['From_time']).dt.minute\ndf['interval'] = df.apply(lambda row: f\"{row['hour']:02d}:{(row['minute'] // 5) * 5:02d}\", axis=1)\n\n\n# Group by the calculated intervals\nresult = df.groupby('interval')['Duration'].agg( mean=( 'mean'), count=('count')).reset_index()\n\nresult\n\n\n\n\n\n\n\n\ninterval\nmean\ncount\n\n\n\n\n0\n07:15\n54.000000\n1\n\n\n1\n07:30\n46.000000\n3\n\n\n2\n07:35\n49.000000\n7\n\n\n3\n07:40\n42.636364\n11\n\n\n4\n07:45\n45.066667\n15\n\n\n5\n07:50\n44.250000\n4\n\n\n6\n07:55\n36.500000\n2\n\n\n7\n08:00\n45.000000\n1\n\n\n8\n08:05\n38.000000\n1\n\n\n9\n16:20\n63.000000\n3\n\n\n10\n16:25\n55.000000\n2\n\n\n11\n16:30\n51.500000\n2\n\n\n12\n16:35\n62.000000\n1\n\n\n13\n16:40\n66.000000\n1\n\n\n14\n16:50\n53.000000\n2\n\n\n15\n16:55\n57.750000\n4\n\n\n16\n17:00\n54.000000\n1\n\n\n17\n17:05\n58.000000\n1\n\n\n18\n17:10\n70.000000\n1\n\n\n19\n17:25\n58.000000\n3\n\n\n20\n17:30\n49.000000\n2\n\n\n21\n17:35\n55.500000\n4\n\n\n22\n17:40\n40.000000\n1\n\n\n23\n17:50\n49.000000\n2\n\n\n24\n18:00\n73.000000\n1\n\n\n25\n18:05\n56.500000\n2\n\n\n26\n18:15\n46.000000\n2\n\n\n27\n18:35\n32.500000\n2\n\n\n28\n18:40\n42.000000\n2\n\n\n29\n18:55\n36.000000\n1\n\n\n\n\n\n\n\n\n# Create two subplots side by side\nfig, axs = plt.subplots(1, 2, figsize=(12, 5))\n\nresult['hour'] = pd.to_datetime(result['interval']).dt.hour\n\n# Plot for data before midday\naxs[0].bar(result[result['hour'] &lt; 12]['interval'], result[result['hour'] &lt; 12]['mean'])\naxs[0].set_title('Trip from Home')\naxs[0].set_xlabel('')\naxs[0].set_ylabel('Duration (mins)')\naxs[0].tick_params(axis='x', rotation=45)\n\n# Plot for data after midday\naxs[1].bar(result[result['hour'] &gt;= 12]['interval'], result[result['hour'] &gt;= 12]['mean'])\naxs[1].set_title('Trip from Office')\naxs[1].set_xlabel('')\naxs[1].set_ylabel('Duration (mins)')\naxs[1].tick_params(axis='x', rotation=45)\n\n# Adjust layout for better spacing\nplt.tight_layout()\n\n# Show plot\nplt.show()\n\n\n\n\n\n\n\n\nThere is no indication of an optimum time to leave home or office. Though there are a slight indication that leaving home later resulting in less traffic to the office.\nAnother minor observation is that I was significantly more consistent to leave at home around the 7:40-7:50 window, where this 10 minutes window represents 58% of my travel start time in the morning. In contrast, my start time leaving the office is way more distributed, which could be contributed by more variety of workloads at the office."
  }
]